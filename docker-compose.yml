version: '3.3'

services:

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-tier

  celery:
    build: ./backend
    container_name: celery_worker
    command: celery -A myproject worker --loglevel=info
    env_file:
      - .env 
    depends_on:
      - rabbitmq
      - mysqldb
    volumes:
      - ./backend:/backend
    networks:
      - app-tier


  react:
    build:
      context: ./frontend
    container_name: react
    stdin_open: true
    command: sh -c "yarn dev"
    ports:
      - 5173:5173
    volumes:
      - ./frontend:/app/frontend

  mysqldb:
    image: mysql:latest
    container_name: mysqldb
    restart: always
    env_file:
      - .env
    ports:
      - '3306:3306'
    volumes:
      - sql-db:/var/lib/mysql
    healthcheck:
      test:
        ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-uadmin', '-proot']
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-tier

  phpmyadmin:
    image: phpmyadmin
    restart: always
    links:
      - mysqldb
    ports:
      - 8080:80
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysqldb
      PMA_PORT: 3306
    networks:
      - app-tier

  django:
    build:
      context: ./backend
    container_name: django
    command: >
      sh -c "python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn myproject.wsgi:application --bind 0.0.0.0:8001 --timeout 150"
    stdin_open: true
    ports:
      - 8001:8001
    volumes:
      - ./backend/:/backend/
      - sql-db:/var/lib/mysql
      - ./backend/static/:/backend/static/
    depends_on:
      - mysqldb
    networks:
      - app-tier
    restart: always
    env_file:
      - .env
    expose:
      - 8001

  nginx:
    image: nginx:latest
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    expose:
      - 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./backend/static/:/backend/static/
    depends_on:
      django:
        condition: service_started
    networks:
      - app-tier
volumes:
  rabbitmq_data:
  sql-db:

networks:
  app-tier:
    driver: bridge
